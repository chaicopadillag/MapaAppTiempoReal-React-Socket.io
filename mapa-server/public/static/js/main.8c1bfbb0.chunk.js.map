{"version":3,"sources":["context/SocketContext.js","hooks/useSocket.js","hooks/useMapBox.js","pages/MapaPage.js","MapaApp.js","index.js"],"names":["SocketContext","createContext","SocketProvider","children","serverPath","useState","online","setOnline","socket","useMemo","io","connect","transport","useEffect","on","useSocket","Provider","value","mapboxgl","workerClass","require","default","accessToken","useMapBox","puntoInicial","coors","setCoors","mapaDiv","useRef","mapa","marcadores","useRefMapa","useCallback","divMapa","current","movimientoMarcador","Subject","nuevoMarcador","agregarMarcador","evento","id","lngLat","lng","lat","marcador","Marker","uuid","v4","setLngLat","addTo","setDraggable","next","target","getLngLat","actualizarPosicionMarcador","Map","container","style","center","zoom","getCenter","toFixed","getZoom","nuevoMarcador$","movimientoMarcador$","MapaPage","useContext","Object","keys","subscribe","emit","className","ref","MapaApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c1bfbb0.chunk.js","sourcesContent":["import React, { createContext } from 'react';\nimport { useSocket } from '../hooks/useSocket';\n\nexport const SocketContext = createContext();\n\nexport const SocketProvider = ({ children }) => {\n\tconst { socket, online } = useSocket('https://mapa-location.herokuapp.com');\n\treturn <SocketContext.Provider value={{ socket, online }}>{children}</SocketContext.Provider>;\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport { io } from 'socket.io-client';\n\nexport const useSocket = (serverPath) => {\n\tconst [online, setOnline] = useState(false);\n\n\tconst socket = useMemo(\n\t\t() =>\n\t\t\tio.connect(serverPath, {\n\t\t\t\ttransport: ['websocket'],\n\t\t\t}),\n\t\t[serverPath]\n\t);\n\n\tuseEffect(() => {\n\t\tsocket.on('connect', () => {\n\t\t\tsetOnline(true);\n\t\t});\n\t\tsocket.on('disconnect', () => {\n\t\t\tsetOnline(false);\n\t\t});\n\t}, [socket]);\n\n\treturn { socket, online };\n};\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { Subject } from 'rxjs';\nimport mapboxgl from 'mapbox-gl';\n\n//eslint-disable-next-line import/no-webpack-loader-syntax\nmapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default;\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiY2hhaWNvcGFkaWxsYWciLCJhIjoiY2tseTU1N3pqMDBvNDJubzlsZm1jOWplcCJ9.luBsL5lsc18_ItnotezsHg';\n\nconst useMapBox = (puntoInicial) => {\n\tconst [coors, setCoors] = useState(puntoInicial);\n\tconst mapaDiv = useRef();\n\tconst mapa = useRef();\n\tconst marcadores = useRef({});\n\n\tconst useRefMapa = useCallback((divMapa) => {\n\t\tmapaDiv.current = divMapa;\n\t}, []);\n\n\tconst movimientoMarcador = useRef(new Subject());\n\tconst nuevoMarcador = useRef(new Subject());\n\n\tconst agregarMarcador = useCallback((evento, id) => {\n\t\tconst { lng, lat } = evento.lngLat || evento;\n\t\tconst marcador = new mapboxgl.Marker();\n\t\tmarcador.id = id || uuid.v4();\n\t\tmarcador.setLngLat([lng, lat]).addTo(mapa.current).setDraggable(true);\n\t\tmarcadores.current[marcador.id] = marcador;\n\n\t\tif (!id) {\n\t\t\tnuevoMarcador.current.next({\n\t\t\t\tid: marcador.id,\n\t\t\t\tlng,\n\t\t\t\tlat,\n\t\t\t});\n\t\t}\n\t\t// event movimiento de marcador\n\t\tmarcador.on('drag', ({ target }) => {\n\t\t\tconst { id } = target;\n\t\t\tconst { lng, lat } = target.getLngLat();\n\t\t\tmovimientoMarcador.current.next({\n\t\t\t\tid,\n\t\t\t\tlng,\n\t\t\t\tlat,\n\t\t\t});\n\t\t});\n\t}, []);\n\n\tconst actualizarPosicionMarcador = useCallback(({ id, lng, lat }) => {\n\t\tmarcadores.current[id].setLngLat([lng, lat]);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tmapa.current = new mapboxgl.Map({\n\t\t\tcontainer: mapaDiv.current,\n\t\t\tstyle: 'mapbox://styles/mapbox/streets-v11',\n\t\t\tcenter: [puntoInicial.lng, puntoInicial.lat],\n\t\t\tzoom: puntoInicial.zoom,\n\t\t});\n\t}, [puntoInicial]);\n\n\tuseEffect(() => {\n\t\tmapa.current?.on('move', () => {\n\t\t\tconst { lng, lat } = mapa.current.getCenter();\n\t\t\tsetCoors({\n\t\t\t\tlng: lng.toFixed(4),\n\t\t\t\tlat: lat.toFixed(4),\n\t\t\t\tzoom: mapa.current.getZoom().toFixed(2),\n\t\t\t});\n\t\t});\n\t}, []);\n\n\t// TODO: agregar marcado\n\tuseEffect(() => {\n\t\tmapa.current?.on('click', agregarMarcador);\n\t}, [agregarMarcador]);\n\n\treturn {\n\t\tagregarMarcador,\n\t\tcoors,\n\t\tuseRefMapa,\n\t\tnuevoMarcador$: nuevoMarcador.current,\n\t\tmovimientoMarcador$: movimientoMarcador.current,\n\t\tactualizarPosicionMarcador,\n\t};\n};\n\nexport default useMapBox;\n","import React, { useContext, useEffect } from 'react';\nimport { SocketContext } from '../context/SocketContext';\nimport useMapBox from '../hooks/useMapBox';\n\nconst puntoInicial = {\n\tlng: -77.0058,\n\tlat: -12.0058,\n\tzoom: 14.7279,\n};\n\nconst MapaPage = () => {\n\tconst { socket } = useContext(SocketContext);\n\tconst { coors, useRefMapa, nuevoMarcador$, movimientoMarcador$, agregarMarcador, actualizarPosicionMarcador } = useMapBox(puntoInicial);\n\n\tuseEffect(() => {\n\t\tsocket.on('marcadores-activos', (marcadores) => {\n\t\t\tfor (const id of Object.keys(marcadores)) {\n\t\t\t\tagregarMarcador(marcadores[id], id);\n\t\t\t}\n\t\t});\n\t}, [socket, agregarMarcador]);\n\n\tuseEffect(() => {\n\t\tnuevoMarcador$.subscribe((marcador) => {\n\t\t\tsocket.emit('crear-marcador', marcador);\n\t\t});\n\t}, [nuevoMarcador$, socket]);\n\n\tuseEffect(() => {\n\t\tmovimientoMarcador$.subscribe((marcador) => {\n\t\t\tsocket.emit('actualizar-marcador', marcador);\n\t\t});\n\t}, [socket, movimientoMarcador$]);\n\n\tuseEffect(() => {\n\t\tsocket.on('actualizar-posicion', (marcador) => {\n\t\t\tactualizarPosicionMarcador(marcador);\n\t\t});\n\t}, [socket, actualizarPosicionMarcador]);\n\n\tuseEffect(() => {\n\t\tsocket.on('nuevo-marcador', (marcador) => {\n\t\t\tagregarMarcador(marcador, marcador.id);\n\t\t});\n\t}, [socket, agregarMarcador]);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"info\">\n\t\t\t\tLng: {coors.lng} | Lat: {coors.lat} | Zoom: {coors.zoom}\n\t\t\t</div>\n\t\t\t<div ref={useRefMapa} className=\"mapa-container\" />\n\t\t</>\n\t);\n};\n\nexport default MapaPage;\n","import React from 'react';\nimport { SocketProvider } from './context/SocketContext';\nimport MapaPage from './pages/MapaPage';\n\nconst MapaApp = () => {\n\treturn (\n\t\t<SocketProvider>\n\t\t\t<MapaPage />\n\t\t</SocketProvider>\n\t);\n};\n\nexport default MapaApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MapaApp from './MapaApp';\n\nReactDOM.render(<MapaApp />, document.getElementById('root'));\n"],"sourceRoot":""}